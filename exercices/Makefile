# Makefile pour un projet C++

# Compilateur
CXX = g++

# Options de compilation
CXXFLAGS = -Wall -Wextra -std=c++17 -O2

# R√©pertoires
SRC_DIR = src
BUILD_DIR = build
INCLUDE_DIR = include

# Nom de l'ex√©cutable final
TARGET = monprogramme

# Liste des fichiers sources
SOURCES = $(wildcard $(SRC_DIR)/*.cpp) main.cpp

# Transformation des fichiers sources en fichiers objets
OBJECTS = $(patsubst $(SRC_DIR)/%.cpp,$(BUILD_DIR)/%.o,$(SOURCES))

# R√®gle par d√©faut (premi√®re r√®gle ex√©cut√©e si aucune cible n'est sp√©cifi√©e)
all: $(BUILD_DIR)/$(TARGET)
	@echo "üîß Compilation de $(TARGET)..."

# R√®gle de liaison pour cr√©er l'ex√©cutable final
$(BUILD_DIR)/$(TARGET): $(OBJECTS)
	@mkdir -p $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) -I$(INCLUDE_DIR) $^ -o $@

# R√®gle g√©n√©rique pour compiler les fichiers sources en fichiers objets
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp
	@mkdir -p $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) -I$(INCLUDE_DIR) -c $< -o $@

# Nettoyer les fichiers compil√©s
clean:
	@echo "üßπ Nettoyage des fichiers compil√©s..."
	rm -rf $(BUILD_DIR)

# Nettoyer et recompiler
rebuild: clean all
	@echo "Reconstruction compl√®te du projet..."

# Ajouter une r√®gle pour ex√©cuter le programme
run: all
	@echo "üöÄ Ex√©cution de $(TARGET)..."
	@./$(BUILD_DIR)/$(TARGET)

# D√©claration des cibles qui ne correspondent pas √† des fichiers
.PHONY: all clean rebuild run
